name: Ubuntu

on: [push, pull_request]

jobs:
  install_uv:
    name: Install UV.
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: "0.7.17"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install project
        run: uv sync --extra dev

  ruff:
    name: Run Ruff and generate a lint report
    runs-on: ubuntu-latest
    needs: install_uv
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: "0.7.17"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install project
        run: uv sync --extra dev

      - name: Run ruff
        run: uv run ruff check .

  test:
    name: Run tests with coverage
    runs-on: ubuntu-latest
    needs: install_uv
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: "0.7.17"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install project
        run: uv sync --extra dev

      - name: Run tests with coverage
        env:
          AWS_BEARER_TOKEN_BEDROCK: ${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}
          TEMP: /tmp
          TMPDIR: /tmp
          # Write coverage's SQLite DB to a temp dir to avoid workspace FS quirks
          COVERAGE_FILE: /tmp/.coverage
        run: |
          # Clean up any existing coverage files to prevent database corruption
          rm -f .coverage*
          rm -f /tmp/.coverage*
          
          # Ensure temp directories are writable
          sudo mkdir -p /tmp/pytest_temp
          sudo chmod 777 /tmp/pytest_temp
          
          # Run tests with coverage, excluding slow tests by default
          uv run pytest --cov --cov-branch --cov-report=xml:${{ github.workspace }}/coverage.xml -m "not slow"
      - name: List coverage files
        if: always()
        run: |
          find . -name "coverage.xml" -type f
          ls -la coverage.xml || echo "coverage.xml not found in root"
      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: false
          verbose: true

  test_slow:
    name: Run slow tests
    runs-on: ubuntu-latest
    needs: install_uv
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[run-slow]')
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.17"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install project
        run: uv sync --extra dev

      - name: Run slow tests
        env:
          AWS_BEARER_TOKEN_BEDROCK: ${{ secrets.AWS_BEARER_TOKEN_BEDROCK }}
          TEMP: /tmp
          TMPDIR: /tmp
          # Keep environment consistent with regular test job
          COVERAGE_FILE: /tmp/.coverage
        run: |
          # Create and set permissions for temp directories
          sudo mkdir -p /tmp/pytest_temp
          sudo chmod 777 /tmp/pytest_temp
          
          # Run only slow tests with extended timeout
          uv run pytest -m "slow" --tb=short --maxfail=3 -v
